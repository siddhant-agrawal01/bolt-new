const {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
console.log("API Key:", apiKey);
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 64,
  maxOutputTokens: 65536,
  responseModalities: [],
  responseMimeType: "text/plain",
};

const CodegenerationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 64,
  maxOutputTokens: 65536,
  responseModalities: [],
  responseMimeType: "application/json",
};

 const chatSession = model.startChat({
  generationConfig,
  history: [],
});

const GenAiCode = model.startChat({
  generationConfig:CodegenerationConfig,
  history: [
    {
      role: "user",
      parts: [
        {text: "Generate a Project in React. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, \nwithout any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\nalso you can use date-fns for date format and react-chartjs-2 chart, graph library\n\nReturn the response in JSON format with the following schema:\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\n\nHere‚Äôs the reformatted and improved version of your prompt:\n\nGenerate a programming code structure for a React project using Vite. Create multiple components, organizing them in separate folders with filenames using the .js extension, if needed. The output should use Tailwind CSS for styling, without any third-party dependencies or libraries, except for icons from the lucide-react library, which should only be used when necessary. Available icons include: Heart, Shield, Clock, Users, Play, Home, Search, Menu, User, Settings, Mail, Bell, Calendar, Star, Upload, Download, Trash, Edit, Plus, Minus, Check, X, and ArrowRight. For example, you can import an icon as import { Heart } from \"lucide-react\" and use it in JSX as <Heart className=\"\" />.\n\nReturn the response in JSON format with the following schema:\n\njson\nCopy code\n{\n  \"projectTitle\": \"\",\n  \"explanation\": \"\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"\"\n    },\n    ...\n  },\n  \"generatedFiles\": []\n}\nEnsure the files field contains all created files, and the generatedFiles field lists all the filenames. Each file's code should be included in the code field, following this example:\nfiles:{\n  \"/App.js\": {\n    \"code\": \"import React from 'react';\\nimport './styles.css';\\nexport default function App() {\\n  return (\\n    <div className='p-4 bg-gray-100 text-center'>\\n      <h1 className='text-2xl font-bold text-blue-500'>Hello, Tailwind CSS with Sandpack!</h1>\\n      <p className='mt-2 text-gray-700'>This is a live code editor.</p>\\n    </div>\\n  );\\n}\"\n  }\n}\n  Additionally, include an explanation of the project's structure, purpose, and functionality in the explanation field. Make the response concise and clear in one paragraph.\n  - When asked then only use this package to import, here are some packages available to import and use (date-fns,react-chartjs-2,\"firebase\",\"@google/generative-ai\" ) only when it required\n  \n  - For placeholder images, please use a https://archive.org/download/placeholder-image/placeholder-image.jpg\n  -Add Emoji icons whenever needed to give good user experinence\n  - all designs I ask you to make, have them be beautiful, not cookie cutter. Make webpages that are fully featured and worthy for production.\n\n- By default, this template supports JSX syntax with Tailwind CSS classes, React hooks, and Lucide React for icons. Do not install other packages for UI themes, icons, etc unless absolutely necessary or I request them.\n\n- Use icons from lucide-react for logos.\n\n- Use stock photos from unsplash where appropriate, only valid URLs you know exist. Do not download the images, only link to them in image tags.\n   `,"},
      ],
    },
    {
      role: "model",
      parts: [
        {text: "```json\n{\n  \"projectTitle\": \"Dashboard Application\",\n  \"explanation\": \"This React project creates a simple dashboard application with several key components organized into separate directories. The application uses Tailwind CSS for styling, lucide-react icons for visual elements, date-fns for date formatting, and react-chartjs-2 for data visualization. The dashboard includes sections for a home page, user management, settings, and a profile page, demonstrating modular component design and the integration of UI libraries within a React application.\",\n  \"files\": {\n    \"/App.js\": {\n      \"code\": \"import React from 'react';\\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\\nimport Home from './components/Home/Home';\\nimport UserManagement from './components/UserManagement/UserManagement';\\nimport Settings from './components/Settings/Settings';\\nimport Profile from './components/Profile/Profile';\\nimport { Menu } from 'lucide-react';\\n\\nfunction App() {\\n  const [isMenuOpen, setIsMenuOpen] = React.useState(false);\\n\\n  const toggleMenu = () => {\\n    setIsMenuOpen(!isMenuOpen);\\n  };\\n\\n  return (\\n    <Router>\\n      <div className=\\\"flex h-screen bg-gray-100\\\">\\n\\n        {/* Sidebar */}\\n        <div className={`bg-gray-800 text-white w-64 min-w-64 space-y-6 px-4 py-7 absolute sm:relative transform transition-transform duration-300 ease-in-out ${isMenuOpen ? 'translate-x-0' : '-translate-x-full sm:translate-x-0'}`}>\\n          <a href=\\\"#\\\" className=\\\"text-white flex items-center space-x-2 px-4\\\">\\n            <span className=\\\"text-2xl font-extrabold\\\">Dashboard</span>\\n          </a>\\n          <nav>\\n            <Link to=\\\"/\\\" className=\\\"block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white\\\">Home üè†</Link>\\n            <Link to=\\\"/users\\\" className=\\\"block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white\\\">Users üë•</Link>\\n            <Link to=\\\"/profile\\\" className=\\\"block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white\\\">Profile üë§</Link>\\n            <Link to=\\\"/settings\\\" className=\\\"block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700 hover:text-white\\\">Settings ‚öôÔ∏è</Link>\\n          </nav>\\n        </div>\\n\\n        {/* Main Content */}\\n        <div className=\\\"flex-1 flex flex-col overflow-hidden\\\">\\n          {/* Header */}\\n          <header className=\\\"bg-white shadow\\\">\\n            <div className=\\\"flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8\\\">\\n              <button onClick={toggleMenu} className=\\\"text-gray-500 hover:text-gray-700 focus:outline-none sm:hidden\\\">\\n                <Menu className=\\\"h-6 w-6\\\" />\\n              </button>\\n              <div className=\\\"ml-3 relative\\\">\\n                {/* Profile dropdown here */}\\n              </div>\\n            </div>\\n          </header>\\n\\n          {/* Main Content Area */}\\n          <main className=\\\"flex-1 overflow-x-hidden overflow-y-auto bg-gray-200\\\">\\n            <div className=\\\"container mx-auto px-6 py-8\\\">\\n              <Routes>\\n                <Route path=\\\"/\\\" element={<Home />} />\\n                <Route path=\\\"/users\\\" element={<UserManagement />} />\\n                <Route path=\\\"/settings\\\" element={<Settings />} />\\n                <Route path=\\\"/profile\\\" element={<Profile />} />\\n              </Routes>\\n            </div>\\n          </main>\\n        </div>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nexport default App;\"\n    },\n    \"/components/Home/Home.js\": {\n      \"code\": \"import React from 'react';\\nimport { Clock } from 'lucide-react';\\nimport { format } from 'date-fns';\\n\\nfunction Home() {\\n  const [currentTime, setCurrentTime] = React.useState(new Date());\\n\\n  React.useEffect(() => {\\n    const intervalId = setInterval(() => {\\n      setCurrentTime(new Date());\\n    }, 1000);\\n\\n    return () => clearInterval(intervalId);\\n  }, []);\\n\\n  return (\\n    <div className=\\\"bg-white shadow rounded-lg p-6\\\">\\n      <h2 className=\\\"text-2xl font-bold mb-4\\\">Welcome Home! üè†</h2>\\n      <p className=\\\"text-gray-700\\\">This is your dashboard's home page. Here, you can see an overview of important information.</p>\\n      <div className=\\\"mt-4 flex items-center space-x-2\\\">\\n        <Clock className=\\\"text-gray-500\\\" />\\n        <p className=\\\"text-gray-600\\\">Current Time: {format(currentTime, 'hh:mm:ss a')}</p>\\n      </div>\\n      <img src=\\\"https://archive.org/download/placeholder-image/placeholder-image.jpg\\\" alt=\\\"Placeholder\\\" className=\\\"mt-4 rounded-md\\\" />\\n    </div>\\n  );\\n}\\n\\nexport default Home;\"\n    },\n    \"/components/UserManagement/UserManagement.js\": {\n      \"code\": \"import React from 'react';\\nimport { Users, Plus, Edit, Trash } from 'lucide-react';\\n\\nfunction UserManagement() {\\n  const users = [\\n    { id: 1, name: 'John Doe', email: 'john.doe@example.com' },\\n    { id: 2, name: 'Jane Smith', email: 'jane.smith@example.com' },\\n    { id: 3, name: 'Peter Jones', email: 'peter.jones@example.com' },\\n  ];\\n\\n  return (\\n    <div className=\\\"bg-white shadow rounded-lg p-6\\\">\\n      <h2 className=\\\"text-2xl font-bold mb-4 flex items-center space-x-2\\\"><Users className=\\\"h-6 w-6\\\" /> User Management</h2>\\n      <div className=\\\"overflow-x-auto\\\">\\n        <table className=\\\"min-w-full divide-y divide-gray-200\\\">\\n          <thead className=\\\"bg-gray-50\\\">\\n            <tr>\\n              <th className=\\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\\">Name</th>\\n              <th className=\\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\\">Email</th>\\n              <th className=\\\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody className=\\\"bg-white divide-y divide-gray-200\\\">\\n            {users.map((user) => (\\n              <tr key={user.id}>\\n                <td className=\\\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\\\">{user.name}</td>\\n                <td className=\\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\\">{user.email}</td>\\n                <td className=\\\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\\\">\\n                  <button className=\\\"text-blue-500 hover:text-blue-700 mr-2\\\"><Edit className=\\\"h-4 w-4\\\" /></button>\\n                  <button className=\\\"text-red-500 hover:text-red-700\\\"><Trash className=\\\"h-4 w-4\\\" /></button>\\n                </td>\\n              </tr>\\n            ))}\\n          </tbody>\\n        </table>\\n      </div>\\n      <button className=\\\"mt-4 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded flex items-center space-x-2\\\">\\n        <Plus className=\\\"h-4 w-4\\\" /> <span>Add User</span>\\n      </button>\\n    </div>\\n  );\\n}\\n\\nexport default UserManagement;\"\n    },\n    \"/components/Settings/Settings.js\": {\n      \"code\": \"import React from 'react';\\nimport { Settings, Bell, Mail } from 'lucide-react';\\n\\nfunction SettingsComponent() {\\n  return (\\n    <div className=\\\"bg-white shadow rounded-lg p-6\\\">\\n      <h2 className=\\\"text-2xl font-bold mb-4 flex items-center space-x-2\\\"><Settings className=\\\"h-6 w-6\\\" /> Settings</h2>\\n      \\n      <div className=\\\"mb-4\\\">\\n        <label htmlFor=\\\"notifications\\\" className=\\\"block text-gray-700 text-sm font-bold mb-2\\\">Notifications:</label>\\n        <div className=\\\"flex items-center\\\">\\n          <Bell className=\\\"text-gray-500 mr-2\\\" />\\n          <select id=\\\"notifications\\\" className=\\\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\">\\n            <option>Enable</option>\\n            <option>Disable</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div className=\\\"mb-4\\\">\\n        <label htmlFor=\\\"email\\\" className=\\\"block text-gray-700 text-sm font-bold mb-2\\\">Email Preferences:</label>\\n        <div className=\\\"flex items-center\\\">\\n          <Mail className=\\\"text-gray-500 mr-2\\\" />\\n          <input type=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Your Email\\\" className=\\\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\\\" />\\n        </div>\\n      </div>\\n      \\n      <button className=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\\\" type=\\\"button\\\">\\n        Save Settings\\n      </button>\\n    </div>\\n  );\\n}\\n\\nexport default SettingsComponent;\"\n    },\n    \"/components/Profile/Profile.js\": {\n      \"code\": \"import React from 'react';\\nimport { User, Edit, Upload, Download } from 'lucide-react';\\n\\nfunction Profile() {\\n  const profileData = {\\n    name: 'Alex Johnson',\\n    email: 'alex.j@example.com',\\n    bio: 'Software Engineer and React Enthusiast. üíª'\\n  };\\n\\n  return (\\n    <div className=\\\"bg-white shadow rounded-lg p-6\\\">\\n      <h2 className=\\\"text-2xl font-bold mb-4 flex items-center space-x-2\\\"><User className=\\\"h-6 w-6\\\" /> My Profile</h2>\\n\\n      <div className=\\\"flex items-center mb-4\\\">\\n        <img src=\\\"https://archive.org/download/placeholder-image/placeholder-image.jpg\\\" alt=\\\"Profile\\\" className=\\\"w-24 h-24 rounded-full mr-4\\\" />\\n        <div>\\n          <h3 className=\\\"text-xl font-semibold\\\">{profileData.name}</h3>\\n          <p className=\\\"text-gray-600\\\">{profileData.email}</p>\\n        </div>\\n      </div>\\n\\n      <p className=\\\"text-gray-700 mb-4\\\">{profileData.bio}</p>\\n\\n      <div className=\\\"flex space-x-4\\\">\\n        <button className=\\\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded flex items-center space-x-2\\\">\\n          <Edit className=\\\"h-4 w-4\\\" /> <span>Edit Profile</span>\\n        </button>\\n        <button className=\\\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded flex items-center space-x-2\\\">\\n          <Upload className=\\\"h-4 w-4\\\" /> <span>Upload Avatar</span>\\n        </button>\\n        <button className=\\\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded flex items-center space-x-2\\\">\\n          <Download className=\\\"h-4 w-4\\\" /> <span>Download Profile</span>\\n        </button>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Profile;\"\n    }\n  },\n  \"generatedFiles\": [\n    \"/App.js\",\n    \"/components/Home/Home.js\",\n    \"/components/UserManagement/UserManagement.js\",\n    \"/components/Settings/Settings.js\",\n    \"/components/Profile/Profile.js\"\n  ]\n}\n```"},
      ],
    },
  ],
});


// Test function to check if Gemini AI model is working
 const testGeminiModel = async () => {
  try {
    const prompt = "Hello, can you tell me what Gemini AI is?";
    const result = await chatSession.sendMessage(prompt);
    const response = await result.response;
    const text = response.text();
    console.log("Gemini AI Test Response:", text);
    return text;
  } catch (error) {
    console.error("Error testing Gemini AI:", error);
    return null;
  }
};

// Uncomment the line below to run the test when this file is imported
// testGeminiModel();
module.exports = {
  chatSession,
  GenAiCode,
  testGeminiModel
};

